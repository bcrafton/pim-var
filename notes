
> how does shifting work ? 
  > filter2pcm gives float
  > dot = patch_xb @ f_wb
  > adc(dot = patch_xb @ f_wb)
  
> so we want to come up with good: rows_per_read
to do so, we just need to figure out which it screws up on.

rows_per_read_table = {}
rows_per_read_table[(1, 1)] = 16
rows_per_read_table[(1, 2)] = 16
rows_per_read_table[(1, 3)] = 4
rows_per_read_table[(1, 4)] = 4

rows_per_read_table[(2, 1)] = 16
rows_per_read_table[(2, 2)] = 4
rows_per_read_table[(2, 3)] = 4
rows_per_read_table[(2, 4)] = 4

rows_per_read_table[(3, 1)] = 16
rows_per_read_table[(3, 2)] = 4
rows_per_read_table[(3, 3)] = 4
rows_per_read_table[(3, 4)] = 4

rows_per_read_table[(4, 1)] = 4
rows_per_read_table[(4, 2)] = 4
rows_per_read_table[(4, 3)] = 4
rows_per_read_table[(4, 4)] = 4

------

also, we shud not be relying on random distribution to hold
we need to work with distributions.
its a more robust idea.

steps:
1) fix ADC
2) highlight which [xb, wb] caused the problem
3) try to make distributions work
> instead of count_nonzero(y1 == y2)
> expected number of errors * size of error

------

> https://docs.scipy.org/doc/scipy/reference/tutorial/stats.html
how can we add distributions together ??

we want to add a bunch of norms together
then get the probability density function of the expected value of the dot product.
then we can integrate that 
and come up with our goodness metric.

> http://pacal.sourceforge.net/
with scipy it dosnt seem like we can operate on random variables the way we want to.

sort of weird scipy dosnt have this functionality.
if we are going to use only 2 distribtions, maybe we can handle it our selves
> adding normal distributions together is not difficult.

maybe we can use this library initially, then move away from it once we figure things out
probably still worth scoping the space a little bit.

------























